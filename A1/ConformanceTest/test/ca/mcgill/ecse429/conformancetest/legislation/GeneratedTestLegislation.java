/** Auto-generated by Nplus. */

package ca.mcgill.ecse429.conformancetest.legislation;

import org.junit.Test;
import org.junit.Assert;

import java.util.function.Predicate;

public class GeneratedTestLegislation {

	static final Predicate<Legislation> isStateinPreparation = (m) -> m.getState() == Legislation.State.inPreparation;
	static final Predicate<Legislation> isStateinHouseOfCommons = (m) -> m.getState() == Legislation.State.inHouseOfCommons;
	static final Predicate<Legislation> isStateinSenate = (m) -> m.getState() == Legislation.State.inSenate;
	static final Predicate<Legislation> isStatefinalized = (m) -> m.getState() == Legislation.State.finalized;

	static Legislation test;

	@Test
	public void TestPath1() {
		/* make a new test class; assumes no-arg con'r is good;
		 assumes con'r is the first thing called */
		test = new Legislation();

		/* start ->@ctor-> inPreparation */
		/* inPreparation ->introduceInHouse-> inHouseOfCommons */
		/* inHouseOfCommons ->votePasses-> finalized */
	}

	@Test
	public void TestPath2() {
		/* make a new test class; assumes no-arg con'r is good;
		 assumes con'r is the first thing called */
		test = new Legislation();

		/* start ->@ctor-> inPreparation */
		/* inPreparation ->introduceInHouse-> inHouseOfCommons */
		/* inHouseOfCommons ->votePasses-> inSenate */
	}

	@Test
	public void TestPath3() {
		/* make a new test class; assumes no-arg con'r is good;
		 assumes con'r is the first thing called */
		test = new Legislation();

		/* start ->@ctor-> inPreparation */
		/* inPreparation ->introduceInHouse-> inHouseOfCommons */
		/* inHouseOfCommons ->votePasses-> inSenate */
	}

}
